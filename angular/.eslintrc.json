{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "./tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:@typescript-eslint/recommended"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": {
              "memberTypes": [
                // 1. @Input decorated fields
                ["decorated-field", "decorated-accessor"],
                
                // 2. Static fields
                ["public-static-field", "protected-static-field", "private-static-field"],
                
                // 3. Instance fields by visibility
                ["public-field", "protected-field", "private-field"],
                
                // 4. Constructors
                "constructor",
                
                // 5. Static methods
                ["public-static-method", "protected-static-method", "private-static-method"],
                
                // 6. Instance methods by visibility
                ["public-method", "protected-method", "private-method"]
              ],
              "order": "alphabetically-case-insensitive"
            },
            "classes": {
              "memberTypes": [
                // 1. @Input/@Output/@ViewChild decorators first
                "decorated-field",
                "decorated-accessor", 
                
                // 2. Static fields
                "public-static-field",
                "protected-static-field", 
                "private-static-field",
                
                // 3. Instance fields by visibility (public → protected → private)
                "public-field",
                "protected-field",
                "private-field",
                
                // 4. Constructor
                "constructor",
                
                // 5. Getters/Setters
                ["public-get", "public-set"],
                ["protected-get", "protected-set"],
                ["private-get", "private-set"],
                
                // 6. Static methods
                "public-static-method",
                "protected-static-method",
                "private-static-method",
                
                // 7. Instance methods by visibility
                "public-method",
                "protected-method", 
                "private-method"
              ]
            }
          }
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}
