# ---------- Build stage ----------
FROM node:20-alpine AS build
WORKDIR /app

ARG BACKEND_BASE_URL=https://localhost
ARG REMOTE_SERVICE_BASE_URL=https://localhost/api
ARG FRONTEND_BASE_URL=https://localhost
ARG WEB_CLIENT_ID=SmartRestaurant_Web

COPY angular/package*.json ./
RUN npm install --legacy-peer-deps

COPY angular/ .

# Ghi đè env vào environment*.ts
RUN sed -i "s|baseUrl: '[^']*'|baseUrl: '${FRONTEND_BASE_URL}'|g" src/environments/environment.ts && \
    sed -i "s|issuer: '[^']*'|issuer: '${BACKEND_BASE_URL}'|g" src/environments/environment.ts && \
    sed -i "s|url: '[^']*'|url: '${REMOTE_SERVICE_BASE_URL}'|g" src/environments/environment.ts && \
    sed -i "s|clientId: '[^']*'|clientId: '${WEB_CLIENT_ID}'|g" src/environments/environment.ts && \
    sed -i "s|baseUrl: '[^']*'|baseUrl: '${FRONTEND_BASE_URL}'|g" src/environments/environment.prod.ts && \
    sed -i "s|issuer: '[^']*'|issuer: '${BACKEND_BASE_URL}'|g" src/environments/environment.prod.ts && \
    sed -i "s|url: '[^']*'|url: '${REMOTE_SERVICE_BASE_URL}'|g" src/environments/environment.prod.ts && \
    sed -i "s|clientId: '[^']*'|clientId: '${WEB_CLIENT_ID}'|g" src/environments/environment.prod.ts

RUN npm run build:prod

# ---------- Runtime stage ----------
FROM nginx:1.25-alpine AS production

RUN apk add --no-cache curl

COPY --from=build /app/dist /usr/share/nginx/html
COPY infrastructure/docker/nginx-web-http.conf /etc/nginx/nginx.conf

USER nginx
EXPOSE 80

HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

CMD ["nginx", "-g", "daemon off;"]