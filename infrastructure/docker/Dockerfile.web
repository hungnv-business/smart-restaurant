# Optimized Multi-stage Dockerfile for Angular 19
FROM node:20-alpine AS build
WORKDIR /app

# Copy package files and install dependencies
COPY angular/package*.json ./
RUN npm install --legacy-peer-deps

# Copy source and build for production
COPY angular/ .
RUN npm run build:prod

# Production runtime with Nginx
FROM nginx:1.25-alpine AS production

# Install curl for health checks
RUN apk add --no-cache curl

# Copy built app and nginx config
COPY --from=build /app/dist /usr/share/nginx/html
COPY infrastructure/docker/nginx-web-http.conf /etc/nginx/nginx.conf

# Create directories for nginx non-root user and set permissions
RUN mkdir -p /var/cache/nginx /var/run/nginx /var/log/nginx && \
    chown -R nginx:nginx /usr/share/nginx/html /var/cache/nginx /var/run/nginx /var/log/nginx && \
    chmod -R 755 /var/cache/nginx /var/run/nginx

USER nginx
EXPOSE 80

HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

CMD ["nginx", "-g", "daemon off;"]